name: Snapshot

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '**.md'
  workflow_dispatch:
  workflow_run:
    workflows: ["Test"]
    types:
      - completed
    branches:
      - main

jobs:
  check-test-status:
    name: Check Test Workflow Status
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Check Test Status
        run: |
          if [ "${{ github.event_name }}" == "workflow_run" ]; then
            echo "Test workflow has completed successfully."
          else
            echo "Direct workflow trigger. Proceeding with snapshot."
          fi

  build-gnome-extension:
    name: Build GNOME extension
    runs-on: ubuntu-latest
    needs: check-test-status
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make zip

      - name: Build extension
        run: |
          cd contrib/gnome-extension
          make zip
          echo "Extension built successfully"
          echo "=== Checking what was created ==="
          find $(pwd)/../../dist -name "*gnome-extension*" -o -name "*.zip" | sort

      - name: Upload GNOME extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: gnome-extension
          path: dist/gnome-extension/*.zip
          retention-days: 1

  goreleaser:
    name: Run GoReleaser
    needs: build-gnome-extension
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Generate snapshot version
        id: snapshot-version
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          COMMIT_MSG=$(git log -1 --pretty=%B | head -n 1)
          echo "VERSION=0.0.0-SNAPSHOT-${COMMIT_HASH}" >> $GITHUB_OUTPUT
          echo "COMMIT_MSG=${COMMIT_MSG}" >> $GITHUB_OUTPUT
          echo "Generated snapshot version: 0.0.0-SNAPSHOT-${COMMIT_HASH}"
          echo "Commit message: ${COMMIT_MSG}"

      - name: Run GoReleaser snapshot
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "latest"
          args: release --clean --snapshot --timeout 30m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ steps.snapshot-version.outputs.VERSION }}
          GORELEASER_PRERELEASE: "true"
          GORELEASER_DRAFT: "false"

      - name: Download GNOME extension artifact
        uses: actions/download-artifact@v4
        with:
          name: gnome-extension
          path: dist/gnome-extension

      - name: Check for GNOME extension files
        run: |
          echo "=== Listing all directories ==="
          find . -type d | sort
          echo "=== Looking for gnome-extension files ==="
          find . -name "*gnome-extension*" -type d -o -name "*.zip" | sort

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Snapshot ${{ steps.snapshot-version.outputs.VERSION }}"
          tag_name: snapshot-${{ steps.snapshot-version.outputs.VERSION }}
          body: |
            Automated snapshot build from commit ${{ github.sha }}
            
            Commit message: ${{ steps.snapshot-version.outputs.COMMIT_MSG }}
            
            This is an automated snapshot build and is not intended for production use.
          files: |
            ./dist/keylightd_*.tar.gz
            ./dist/keylightctl_*.tar.gz
            ./dist/gnome-extension/*.zip
          prerelease: true
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
