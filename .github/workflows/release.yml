name: Release

on:
  push:
    branches:
      - main # Run on pushes to main for snapshots
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5

      - name: Display Go version
        run: go version

      - name: Run tests with coverage
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.txt
  codecov:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download code coverage results
        uses: actions/download-artifact@v4
        with:
          name: coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          fail_ci_if_error: true

  build-gnome-extension:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make zip

      - name: Build extension
        run: |
          cd contrib/gnome-extension
          make zip

      - name: Upload extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: gnome-extension
          path: dist/gnome-extension/keylightd-control@jmylchreest.github.io.shell-extension.zip

  release-keylightd:
    runs-on: ubuntu-latest
    needs: build-gnome-extension
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5

      - name: Download gnome-extension artifact
        uses: actions/download-artifact@v4
        with:
          name: gnome-extension

      - name: Run GoReleaser (release)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser (snapshot)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 