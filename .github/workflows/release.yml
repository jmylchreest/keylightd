name: Release

on:
  push:
    tags:
      - "v*"
      - "!*SNAPSHOT*"
  workflow_dispatch:
  workflow_run:
    workflows: ["Test"]
    types:
      - completed

jobs:
  check-test-status:
    name: Check Test Workflow Status
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'workflow_run' ||
      (github.event.workflow_run.conclusion == 'success' &&
       (startsWith(github.event.workflow_run.head_branch, 'refs/tags/v') ||
        contains(github.event.workflow_run.head_branch, 'refs/tags/v')))
    steps:
      - name: Check Test Status
        run: |
          if [ "${{ github.event_name }}" == "workflow_run" ]; then
            echo "Test workflow has completed successfully."
            echo "Workflow run event: branch=${{ github.event.workflow_run.head_branch }}, commit=${{ github.event.workflow_run.head_sha }}"
          else
            echo "Direct workflow trigger. Proceeding with release."
          fi

  build-gnome-extension:
    name: Build GNOME extension
    needs: check-test-status
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make zip

      - name: Build extension
        run: |
          cd contrib/gnome-extension
          make zip
          echo "Extension built successfully"
          echo "=== Checking what was created ==="
          find $(pwd)/../../dist -name "*gnome-extension*" -o -name "*.zip" | sort

      - name: Upload GNOME extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: gnome-extension
          path: dist/gnome-extension/*.zip
          retention-days: 1

  goreleaser:
    name: Run GoReleaser
    needs: build-gnome-extension
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Download GNOME extension artifact
        uses: actions/download-artifact@v4
        with:
          name: gnome-extension
          path: dist/gnome-extension

      - name: Check for GNOME extension files
        run: |
          echo "=== Listing all directories ==="
          find . -type d | sort
          echo "=== Looking for gnome-extension files ==="
          find . -name "*gnome-extension*" -type d -o -name "*.zip" | sort

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --timeout 30m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  flatpak:
    name: Build Flatpak
    needs: goreleaser
    uses: ./.github/workflows/flatpak.yml
    with:
      tag_name: ${{ github.ref_name }}
      version: ${{ github.ref_name | replace('v', '') }}
      release_type: release
      release_id: ${{ github.run_id }}
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
