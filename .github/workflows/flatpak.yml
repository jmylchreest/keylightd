name: Flatpak Build

on:
  workflow_call:
    inputs:
      tag_name:
        description: "The tag name for the release"
        required: true
        type: string
      version:
        description: "The version number"
        required: true
        type: string

jobs:
  flatpak:
    name: Build Flatpak for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Vendor Go modules
        run: |
          echo "=== Vendoring Go modules ==="
          go mod tidy
          go mod vendor

          echo "=== Vendor directory contents ==="
          ls -la vendor/ || echo "No vendor directory created"

          echo "=== Creating vendor archive ==="
          tar -czf vendor.tar.gz vendor/
          ls -la vendor.tar.gz

      - name: Calculate vendor archive hash
        id: vendor-hash
        run: |
          VENDOR_SHA256=$(sha256sum vendor.tar.gz | cut -d' ' -f1)
          echo "VENDOR_SHA256=${VENDOR_SHA256}" >> $GITHUB_OUTPUT
          echo "Vendor archive SHA256: ${VENDOR_SHA256}"

      - name: Create source archive
        run: |
          echo "=== Creating source archive ==="
          # Create a clean source archive without .git
          git config --global --add safe.directory "$(pwd)"
          git archive --format=tar.gz --prefix=keylightd-${{ inputs.version }}/ HEAD > source.tar.gz
          ls -la source.tar.gz

      - name: Calculate source archive hash
        id: source-hash
        run: |
          SOURCE_SHA256=$(sha256sum source.tar.gz | cut -d' ' -f1)
          echo "SOURCE_SHA256=${SOURCE_SHA256}" >> $GITHUB_OUTPUT
          echo "Source archive SHA256: ${SOURCE_SHA256}"

      - name: Generate Flatpak manifest
        run: |
          cat > io.github.jmylchreest.keylightd.yml << 'EOF'
          app-id: io.github.jmylchreest.keylightd
          runtime: org.freedesktop.Platform
          runtime-version: "23.08"
          sdk: org.freedesktop.Sdk
          sdk-extensions:
            - org.freedesktop.Sdk.Extension.golang
          command: keylightctl
          finish-args:
            - --share=network
            - --socket=x11
            - --socket=wayland
            - --own-name=io.github.jmylchreest.keylightd
            - --filesystem=home
            - --talk-name=org.freedesktop.systemd1

          modules:
            - name: keylightd
              buildsystem: simple
              build-options:
                env:
                  - CGO_ENABLED=0
                  - GOPROXY=off
                  - GOFLAGS=-mod=vendor
                append-path: /usr/lib/sdk/golang/bin
              build-commands:
                # Extract vendor dependencies
                - tar -xzf vendor.tar.gz

                # Build keylightd binary
                - |
                  go build \
                    -ldflags="-s -w \
                      -X github.com/jmylchreest/keylightd/cmd/keylightd.version=${{ inputs.version }} \
                      -X github.com/jmylchreest/keylightd/cmd/keylightd.commit=$(git rev-parse --short HEAD) \
                      -X github.com/jmylchreest/keylightd/cmd/keylightd.buildDate=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
                    -o keylightd ./cmd/keylightd

                # Build keylightctl binary
                - |
                  go build \
                    -ldflags="-s -w \
                      -X github.com/jmylchreest/keylightd/cmd/keylightctl.version=${{ inputs.version }} \
                      -X github.com/jmylchreest/keylightd/cmd/keylightctl.commit=$(git rev-parse --short HEAD) \
                      -X github.com/jmylchreest/keylightd/cmd/keylightctl.buildDate=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
                    -o keylightctl ./cmd/keylightctl

                # Install binaries
                - install -Dm755 keylightd /app/bin/keylightd
                - install -Dm755 keylightctl /app/bin/keylightctl

                # Create default configuration directory
                - mkdir -p /app/share/keylightd

                # Install systemd user service file
                - install -Dm644 contrib/flatpak/io.github.jmylchreest.keylightd.service /app/share/systemd/user/io.github.jmylchreest.keylightd.service

                # Install desktop autostart file
                - install -Dm644 contrib/flatpak/io.github.jmylchreest.keylightd-autostart.desktop /app/share/applications/io.github.jmylchreest.keylightd-autostart.desktop

                # Install desktop entry
                - install -Dm644 contrib/flatpak/io.github.jmylchreest.keylightd.desktop /app/share/applications/io.github.jmylchreest.keylightd.desktop

                # Install icon
                - install -Dm644 contrib/gnome-extension/keylightd-control@jmylchreest.github.io/icons/hicolor/scalable/actions/light-enabled.svg /app/share/icons/hicolor/scalable/apps/io.github.jmylchreest.keylightd.svg

                # Install appstream metadata
                - install -Dm644 contrib/flatpak/io.github.jmylchreest.keylightd.metainfo.xml /app/share/metainfo/io.github.jmylchreest.keylightd.metainfo.xml
              sources:
                - type: file
                  path: source.tar.gz
                  dest-filename: source.tar.gz
                - type: file
                  path: vendor.tar.gz
                  dest-filename: vendor.tar.gz
                - type: shell
                  commands:
                    - tar -xzf source.tar.gz --strip-components=1
          EOF

      - name: Install Flatpak and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y flatpak flatpak-builder
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install -y flathub org.freedesktop.Platform//23.08 org.freedesktop.Sdk//23.08
          sudo flatpak install -y flathub org.freedesktop.Sdk.Extension.golang//23.08

      - name: Build Flatpak
        run: |
          echo "=== Building Flatpak ==="
          flatpak-builder --force-clean --repo=repo build-dir io.github.jmylchreest.keylightd.yml

          echo "=== Creating bundle ==="
          flatpak build-bundle repo io.github.jmylchreest.keylightd-${{ inputs.version }}.flatpak io.github.jmylchreest.keylightd

      - name: Upload Flatpak artifact
        uses: actions/upload-artifact@v4
        with:
          name: flatpak-${{ inputs.version }}
          path: io.github.jmylchreest.keylightd-${{ inputs.version }}.flatpak
          retention-days: 30

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.tag_name }}
          files: |
            io.github.jmylchreest.keylightd-${{ inputs.version }}.flatpak
            io.github.jmylchreest.keylightd.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
